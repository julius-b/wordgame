networks:
  outer_edge:
    external: true
    name: outer_edge

services:
  web:
    #build: .
    image: wordgame:latest
    restart: unless-stopped
    environment:
      ENV: prod
      PORT: 8080
      DEVELOPMENT: false
      DB_DRIVER: "org.postgresql.Driver"
      DB_URL: "jdbc:postgresql://db:5432/wordgame?user=postgres"
      DOMAIN: hotbling.wtf
    volumes:
      - ./uploads:/uploads/
      - ./data:/data/
      - ./composeApp/build/dist/wasmJs/productionExecutable:/frontend/
      #- ./composeApp/build/dist/wasmJs/developmentExecutable:/frontend/
    ports:
      - "8123:8080"
    networks:
      - outer_edge
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=outer_edge"
      - "traefik.passHostHeader=true"
      - "traefik.http.routers.wordgame.tls=true"
      - "traefik.http.routers.wordgame.entrypoints=websecure"
      - "traefik.http.routers.wordgame.rule=Host(`hotbling.wtf`)"
      - "traefik.http.routers.wordgame.tls.certresolver=prod_tls"
      #- "traefik.http.routers.wordgame.middlewares=secure-headers"
      - "traefik.http.services.wordgame.loadbalancer.server.port=8080"
      - "traefik.http.services.wordgame.loadbalancer.server.scheme=http"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    volumes:
      - pg-volume:/var/lib/postgresql/data
      #- ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: wordgame
      POSTGRES_HOST_AUTH_METHOD: trust
    #ports:
    #  - "54333:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d wordgame" ]
      interval: 1s

volumes:
  pg-volume: { }
